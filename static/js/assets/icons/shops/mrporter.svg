var _path;
var _excluded = ["title", "titleId"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import * as React from "react";
function SvgMrporter(_ref, svgRef) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 67,
    height: 8,
    viewBox: "0 0 67 8",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M32.3304 0.640625C31.2464 0.640625 30.5061 0.905025 29.8451 1.48671C29.1841 2.09483 28.7875 3.02023 28.7875 3.97207C28.7875 4.92391 29.1841 5.82287 29.8451 6.43099C30.4796 7.01267 31.2464 7.27707 32.2775 7.27707C33.3087 7.27707 34.0755 7.01267 34.6836 6.43099C35.3446 5.82287 35.7147 4.89747 35.7676 3.94563C35.7676 2.99379 35.371 2.09483 34.71 1.48671C34.1019 0.931465 33.3087 0.640625 32.3304 0.640625ZM32.2511 6.32523C30.8762 6.32523 29.9244 5.37339 29.9244 3.97207C29.9244 2.57075 30.8762 1.61891 32.2247 1.61891C33.6524 1.61891 34.6043 2.54431 34.5778 3.99851C34.5778 5.37339 33.6524 6.32523 32.2511 6.32523ZM3.88099 4.39511L1.66004 0.772825H0.285156V7.11843H1.237V2.06839L3.80167 6.40455L6.31347 2.06839V7.11843H7.42395V0.772825H5.91687L3.88099 4.39511ZM15.1709 6.45743L14.8007 5.82287L14.7743 5.79643L13.8753 4.28935C14.8272 4.10427 15.2766 3.54903 15.2766 2.62363C15.2766 1.90975 14.9858 1.30163 14.5099 1.06367C14.1133 0.852145 13.6902 0.772825 12.5004 0.772825H9.64491V7.11843H10.729V4.42155H12.6855L13.9811 6.53675L14.0075 6.56319L14.3512 7.11843H15.5939L15.2238 6.53675C15.1973 6.51031 15.1973 6.48387 15.1709 6.45743ZM10.7554 3.46971V1.69823H12.9764C13.558 1.69823 13.7696 1.72467 14.0075 1.88331C14.219 2.01551 14.3512 2.27991 14.3512 2.59719C14.3512 2.91447 14.219 3.17887 14.0075 3.31107C13.7696 3.44327 13.5052 3.46971 12.9764 3.46971H10.7554ZM26.3814 1.09011C26.0113 0.852145 25.5882 0.772825 24.7157 0.772825H21.5958V7.11843H22.6798V4.42155H24.6893C25.5882 4.42155 25.9584 4.34223 26.355 4.10427C26.8309 3.81343 27.0953 3.25819 27.0953 2.59719C27.1217 1.93619 26.8573 1.38095 26.3814 1.09011ZM24.7686 3.49615H22.7063V1.69823H24.7686C25.3767 1.69823 25.6411 1.75111 25.8526 1.88331C26.0377 2.01551 26.1435 2.25347 26.1435 2.59719C26.1435 3.25819 25.7997 3.49615 24.7686 3.49615ZM43.1973 6.48387L42.8007 5.79643L41.9017 4.28935C42.8535 4.10427 43.303 3.54903 43.303 2.62363C43.303 1.90975 43.0122 1.30163 42.5363 1.06367C42.1397 0.852145 41.7166 0.772825 40.5268 0.772825H37.6713V7.11843H38.7553V4.44799H40.7119L42.0075 6.56319L42.0339 6.58963L42.3776 7.11843H43.6203L43.2501 6.56319C43.2237 6.53675 43.2237 6.51031 43.1973 6.48387ZM38.7553 3.49615V1.72467H40.9763C41.558 1.72467 41.7695 1.75111 42.0075 1.90975C42.219 2.04195 42.3512 2.30635 42.3512 2.62363C42.3512 2.94091 42.219 3.20531 42.0075 3.33751C41.7959 3.46971 41.5315 3.49615 40.9763 3.49615H38.7553ZM44.9687 0.772825V1.69823H47.4012V7.11843H48.4853V1.69823H50.8913V0.772825H50.3361H44.9687ZM53.9583 6.19303V4.34223H56.7345V3.41683H53.9583V1.69823H57.9772V0.772825H52.8479V7.11843H58.2416V6.19303H57.6864H53.9583ZM65.7506 6.53675C65.7241 6.51031 65.7241 6.48387 65.6977 6.45743L65.3275 5.82287L65.3011 5.79643L64.4021 4.28935C65.354 4.10427 65.8035 3.54903 65.8035 2.62363C65.8035 1.90975 65.5126 1.30163 65.0367 1.06367C64.6401 0.852145 64.217 0.772825 63.0272 0.772825H60.1717V7.11843H61.2558V4.42155H63.2123L64.5079 6.53675L64.5343 6.56319L64.8781 7.11843H66.1207L65.7506 6.53675ZM61.2822 3.46971V1.69823H63.5032C64.0849 1.69823 64.2964 1.72467 64.5343 1.88331C64.7458 2.01551 64.8781 2.27991 64.8781 2.59719C64.8781 2.91447 64.7458 3.17887 64.5343 3.31107C64.2964 3.44327 64.0584 3.46971 63.5032 3.46971H61.2822Z",
    fill: "currentColor"
  })));
}
var ForwardRef = /*#__PURE__*/React.forwardRef(SvgMrporter);
export default __webpack_public_path__ + "static/media/mrporter.8ca4dcf92f754f34278c02b295fad00e.svg";
export { ForwardRef as ReactComponent };