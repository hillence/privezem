var _path;
var _excluded = ["title", "titleId"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import * as React from "react";
function SvgMrPorter(_ref, svgRef) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 130,
    height: 13,
    viewBox: "0 0 130 13",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M63.2771 0C61.1365 0 59.6747 0.517928 58.3695 1.65737C57.0643 2.84861 56.2811 4.66136 56.2811 6.5259C56.2811 8.39044 57.0643 10.1514 58.3695 11.3426C59.6225 12.4821 61.1365 13 63.1727 13C65.2088 13 66.7229 12.4821 67.9237 11.3426C69.2289 10.1514 69.9598 8.33865 70.0643 6.4741C70.0643 4.60956 69.2811 2.84861 67.9759 1.65737C66.7751 0.569721 65.2088 0 63.2771 0ZM63.1205 11.1355C60.4056 11.1355 58.5261 9.27092 58.5261 6.5259C58.5261 3.78088 60.4056 1.91633 63.0683 1.91633C65.8876 1.91633 67.7671 3.72908 67.7149 6.57769C67.7149 9.27092 65.8876 11.1355 63.1205 11.1355ZM7.1004 7.35458L2.71486 0.258964H0V12.6892H1.87952V2.79681L6.94378 11.2908L11.9036 2.79681V12.6892H14.0964V0.258964H11.1205L7.1004 7.35458ZM29.3936 11.3944L28.6627 10.1514L28.6104 10.0996L26.8353 7.14741C28.7149 6.78486 29.6024 5.69721 29.6024 3.88446C29.6024 2.48606 29.0281 1.29482 28.0884 0.828685C27.3052 0.414343 26.4699 0.258964 24.1205 0.258964H18.4819V12.6892H20.6225V7.40637H24.4859L27.0442 11.5498L27.0964 11.6016L27.7751 12.6892H30.2289L29.498 11.5498C29.4458 11.498 29.4458 11.4462 29.3936 11.3944ZM20.6747 5.54183V2.07171H25.0602C26.2088 2.07171 26.6265 2.12351 27.0964 2.43426C27.5141 2.69323 27.7751 3.21116 27.7751 3.83267C27.7751 4.45418 27.5141 4.97211 27.0964 5.23108C26.6265 5.49004 26.1044 5.54183 25.0602 5.54183H20.6747ZM51.5301 0.880478C50.7992 0.414343 49.9639 0.258964 48.241 0.258964H42.0803V12.6892H44.2209V7.40637H48.1888C49.9639 7.40637 50.6948 7.251 51.4779 6.78486C52.4177 6.21514 52.9398 5.12749 52.9398 3.83267C52.992 2.53785 52.4699 1.4502 51.5301 0.880478ZM48.3454 5.59363H44.2731V2.07171H48.3454C49.5462 2.07171 50.0683 2.1753 50.4859 2.43426C50.8514 2.69323 51.0602 3.15936 51.0602 3.83267C51.0602 5.12749 50.3815 5.59363 48.3454 5.59363ZM84.7349 11.4462L83.9518 10.0996L82.1767 7.14741C84.0562 6.78486 84.9438 5.69721 84.9438 3.88446C84.9438 2.48606 84.3695 1.29482 83.4297 0.828685C82.6466 0.414343 81.8112 0.258964 79.4618 0.258964H73.8233V12.6892H75.9639V7.45817H79.8273L82.3855 11.6016L82.4377 11.6534L83.1165 12.6892H85.5703L84.8394 11.6016C84.7871 11.5498 84.7871 11.498 84.7349 11.4462ZM75.9639 5.59363V2.12351H80.3494C81.498 2.12351 81.9157 2.1753 82.3855 2.48606C82.8032 2.74502 83.0643 3.26295 83.0643 3.88446C83.0643 4.50598 82.8032 5.0239 82.3855 5.28287C81.9679 5.54183 81.4458 5.59363 80.3494 5.59363H75.9639ZM88.2329 0.258964V2.07171H93.0361V12.6892H95.1767V2.07171H99.9277V0.258964H98.8313H88.2329ZM105.984 10.8765V7.251H111.466V5.43825H105.984V2.07171H113.92V0.258964H103.791V12.6892H114.442V10.8765H113.345H105.984ZM129.269 11.5498C129.217 11.498 129.217 11.4462 129.165 11.3944L128.434 10.1514L128.382 10.0996L126.606 7.14741C128.486 6.78486 129.373 5.69721 129.373 3.88446C129.373 2.48606 128.799 1.29482 127.859 0.828685C127.076 0.414343 126.241 0.258964 123.892 0.258964H118.253V12.6892H120.394V7.40637H124.257L126.815 11.5498L126.867 11.6016L127.546 12.6892H130L129.269 11.5498ZM120.446 5.54183V2.07171H124.831C125.98 2.07171 126.398 2.12351 126.867 2.43426C127.285 2.69323 127.546 3.21116 127.546 3.83267C127.546 4.45418 127.285 4.97211 126.867 5.23108C126.398 5.49004 125.928 5.54183 124.831 5.54183H120.446Z",
    fill: "currentColor"
  })));
}
var ForwardRef = /*#__PURE__*/React.forwardRef(SvgMrPorter);
export default __webpack_public_path__ + "static/media/mrPorter.ac5f27e6304015cbeda3743389967835.svg";
export { ForwardRef as ReactComponent };